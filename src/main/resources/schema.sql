CREATE TABLE IF NOT EXISTS `user` (
    `userId` INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    `email` VARCHAR(100) NOT NULL,
    `login` VARCHAR(100) NOT NULL,
    `name` VARCHAR(100) NULL,
    `birthday` date NOT NULL
);

CREATE TABLE IF NOT EXISTS `user_friend` (
    `userId` INTEGER REFERENCES `user`(`userId`),
    `friendId` INTEGER REFERENCES `user`(`userId`)
);

CREATE TABLE IF NOT EXISTS `film` (
    `filmId` INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    `name` VARCHAR(100) NOT NULL,
    `description` VARCHAR(100) NULL,
    `releaseDate` date NOT NULL,
    `duration` INTEGER NOT NULL,
    `rate` INTEGER NULL,
    `ratingId` INTEGER NULL,
    CONSTRAINT `pk_film` PRIMARY KEY (
        `filmId`
    )
);

CREATE TABLE IF NOT EXISTS `genre` (
    `genreId` INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    `name` VARCHAR(100) NOT NULL,
    CONSTRAINT `pk_genre` PRIMARY KEY (
        `genreId`
    )
);

CREATE TABLE IF NOT EXISTS `film_genre` (
    `filmId` INTEGER REFERENCES film(filmId),
    `genreId` INTEGER REFERENCES genre(genreId),
    CONSTRAINT `pk_film_genre` PRIMARY KEY (
        `filmId`,`genreId`
    )
);

CREATE TABLE IF NOT EXISTS `rating` (
    `ratingId` INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    `name` VARCHAR(100) NOT NULL,
    `description` VARCHAR(100) NOT NULL,
    CONSTRAINT `pk_rating` PRIMARY KEY (
        `ratingId`
    )
);

CREATE TABLE IF NOT EXISTS `film_like` (
    `userId` INTEGER REFERENCES `user`(`userId`),
    `filmId` INTEGER REFERENCES `film`(`filmId`),
    CONSTRAINT `pk_film_like` PRIMARY KEY (
        `userId`,`filmId`
    )
);
